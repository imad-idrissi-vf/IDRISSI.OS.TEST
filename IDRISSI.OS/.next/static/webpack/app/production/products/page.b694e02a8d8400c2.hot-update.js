"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/production/products/page",{

/***/ "(app-pages-browser)/./lib/products/product-store.ts":
/*!***************************************!*\
  !*** ./lib/products/product-store.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useProductStore: () => (/* binding */ useProductStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var _product_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./product-data */ \"(app-pages-browser)/./lib/products/product-data.ts\");\n\n\nconst useProductStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        products: _product_data__WEBPACK_IMPORTED_MODULE_0__.mockProducts,\n        filteredProducts: _product_data__WEBPACK_IMPORTED_MODULE_0__.mockProducts,\n        searchTerm: \"\",\n        statusFilter: \"all\",\n        collectionFilter: \"\",\n        tagFilter: [],\n        setSearchTerm: (term)=>{\n            set({\n                searchTerm: term\n            });\n            applyFilters(get, set);\n        },\n        setStatusFilter: (status)=>{\n            set({\n                statusFilter: status\n            });\n            applyFilters(get, set);\n        },\n        setCollectionFilter: (collection)=>{\n            set({\n                collectionFilter: collection\n            });\n            applyFilters(get, set);\n        },\n        setTagFilter: (tags)=>{\n            set({\n                tagFilter: tags\n            });\n            applyFilters(get, set);\n        },\n        addProduct: (productData)=>{\n            const id = \"PRD-\".concat(Math.floor(Math.random() * 10000));\n            const margin = calculateMargin(productData.costPrice, productData.retailPrice);\n            const newProduct = {\n                ...productData,\n                id,\n                margin\n            };\n            set((state)=>({\n                    products: [\n                        ...state.products,\n                        newProduct\n                    ]\n                }));\n            applyFilters(get, set);\n        },\n        updateProduct: (id, productData)=>{\n            set((state)=>{\n                const updatedProducts = state.products.map((product)=>{\n                    if (product.id === id) {\n                        // Recalculate margin if prices changed\n                        let margin = product.margin;\n                        if (productData.costPrice !== undefined && productData.retailPrice !== undefined) {\n                            margin = calculateMargin(productData.costPrice, productData.retailPrice);\n                        } else if (productData.costPrice !== undefined) {\n                            margin = calculateMargin(productData.costPrice, product.retailPrice);\n                        } else if (productData.retailPrice !== undefined) {\n                            margin = calculateMargin(product.costPrice, productData.retailPrice);\n                        }\n                        return {\n                            ...product,\n                            ...productData,\n                            margin\n                        };\n                    }\n                    return product;\n                });\n                return {\n                    products: updatedProducts\n                };\n            });\n            applyFilters(get, set);\n        },\n        archiveProduct: (id)=>{\n            set((state)=>({\n                    products: state.products.map((product)=>product.id === id ? {\n                            ...product,\n                            status: \"archived\"\n                        } : product)\n                }));\n            applyFilters(get, set);\n        },\n        duplicateProduct: (id)=>{\n            set((state)=>{\n                const productToDuplicate = state.products.find((p)=>p.id === id);\n                if (!productToDuplicate) return state;\n                const newId = \"PRD-\".concat(Math.floor(Math.random() * 10000));\n                const duplicatedProduct = {\n                    ...productToDuplicate,\n                    id: newId,\n                    name: \"\".concat(productToDuplicate.name, \" (Copy)\"),\n                    sku: \"\".concat(productToDuplicate.sku, \"-COPY\"),\n                    status: \"draft\"\n                };\n                return {\n                    products: [\n                        ...state.products,\n                        duplicatedProduct\n                    ]\n                };\n            });\n            applyFilters(get, set);\n        },\n        bulkArchive: (ids)=>{\n            set((state)=>({\n                    products: state.products.map((product)=>ids.includes(product.id) ? {\n                            ...product,\n                            status: \"archived\"\n                        } : product)\n                }));\n            applyFilters(get, set);\n        },\n        bulkDuplicate: (ids)=>{\n            set((state)=>{\n                const productsToDuplicate = state.products.filter((p)=>ids.includes(p.id));\n                const duplicatedProducts = productsToDuplicate.map((product)=>({\n                        ...product,\n                        id: \"PRD-\".concat(Math.floor(Math.random() * 10000)),\n                        name: \"\".concat(product.name, \" (Copy)\"),\n                        sku: \"\".concat(product.sku, \"-COPY\"),\n                        status: \"draft\"\n                    }));\n                return {\n                    products: [\n                        ...state.products,\n                        ...duplicatedProducts\n                    ]\n                };\n            });\n            applyFilters(get, set);\n        },\n        // Add these implementations to the store creation\n        isSkuUnique: (sku, currentProductId)=>{\n            const products = get().products;\n            return !products.some((product)=>product.sku === sku && product.id !== currentProductId);\n        },\n        getAvailableProductTypes: ()=>[\n                \"T-shirt\",\n                \"Hoodie\",\n                \"Sweatshirt\",\n                \"Jacket\",\n                \"Pants\",\n                \"Shorts\",\n                \"Hat\",\n                \"Accessory\",\n                \"Footwear\",\n                \"Other\"\n            ],\n        addCollection: (collection)=>{\n        // In a real app, this would add to a database\n        // For this demo, we don't need to do anything as we'll just use the value directly\n        },\n        addWarehouse: (warehouse)=>{\n        // In a real app, this would add to a database\n        // For this demo, we don't need to do anything as we'll just use the value directly\n        },\n        removeWarehouse: (warehouse)=>{\n            // In a real app, this would remove from a database and update products\n            set((state)=>({\n                    products: state.products.map((product)=>product.warehouse === warehouse ? {\n                            ...product,\n                            warehouse: \"\"\n                        } : product)\n                }));\n        },\n        bulkChangeCollection: (ids, collection)=>{\n            set((state)=>({\n                    products: state.products.map((product)=>ids.includes(product.id) ? {\n                            ...product,\n                            collection\n                        } : product)\n                }));\n            applyFilters(get, set);\n        },\n        bulkAddTags: (ids, tags)=>{\n            set((state)=>({\n                    products: state.products.map((product)=>{\n                        if (ids.includes(product.id)) {\n                            const currentTags = product.tags || [];\n                            const newTags = [\n                                ...new Set([\n                                    ...currentTags,\n                                    ...tags\n                                ])\n                            ];\n                            return {\n                                ...product,\n                                tags: newTags\n                            };\n                        }\n                        return product;\n                    })\n                }));\n            applyFilters(get, set);\n        },\n        bulkDelete: (ids)=>{\n            set((state)=>({\n                    products: state.products.filter((product)=>!ids.includes(product.id))\n                }));\n            applyFilters(get, set);\n        },\n        addNoteToProduct: (id, note)=>{\n            set((state)=>({\n                    products: state.products.map((product)=>{\n                        if (product.id === id) {\n                            const noteEntry = {\n                                id: \"note-\".concat(Date.now()),\n                                text: note,\n                                timestamp: new Date(),\n                                user: \"Current User\"\n                            };\n                            const currentNotes = product.notes || [];\n                            return {\n                                ...product,\n                                notes: [\n                                    noteEntry,\n                                    ...currentNotes\n                                ]\n                            };\n                        }\n                        return product;\n                    })\n                }));\n        }\n    }));\n// Helper function to calculate margin\nfunction calculateMargin(costPrice, retailPrice) {\n    if (costPrice === 0) return 0;\n    return Math.round((retailPrice - costPrice) / retailPrice * 100);\n}\n// Helper function to apply all filters\nfunction applyFilters(get, set) {\n    const { products, searchTerm, statusFilter, collectionFilter, tagFilter } = get();\n    let filtered = [\n        ...products\n    ];\n    // Apply search filter\n    if (searchTerm) {\n        const term = searchTerm.toLowerCase();\n        filtered = filtered.filter((product)=>product.name.toLowerCase().includes(term) || product.sku.toLowerCase().includes(term));\n    }\n    // Apply status filter\n    if (statusFilter !== \"all\") {\n        filtered = filtered.filter((product)=>product.status === statusFilter);\n    }\n    // Apply collection filter\n    if (collectionFilter) {\n        filtered = filtered.filter((product)=>product.collection === collectionFilter);\n    }\n    // Apply tag filter\n    if (tagFilter.length > 0) {\n        filtered = filtered.filter((product)=>{\n            var _product_tags;\n            return (_product_tags = product.tags) === null || _product_tags === void 0 ? void 0 : _product_tags.some((tag)=>tagFilter.includes(tag));\n        });\n    }\n    set({\n        filteredProducts: filtered\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/products/product-store.ts\n"));

/***/ })

});