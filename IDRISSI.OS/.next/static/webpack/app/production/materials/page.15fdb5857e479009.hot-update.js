"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/production/materials/page",{

/***/ "(app-pages-browser)/./lib/materials/material-store.ts":
/*!*****************************************!*\
  !*** ./lib/materials/material-store.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMaterialStore: () => (/* binding */ useMaterialStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n\n// Initial mock data\nconst initialMaterials = [\n    {\n        id: \"1\",\n        title: \"SS24 Premium Box\",\n        type: \"packaging\",\n        status: \"active\",\n        campaign: \"SS24\",\n        tags: [\n            \"box\",\n            \"premium\"\n        ],\n        previewUrl: \"/materials/ss24-box.jpg\",\n        fileUrl: \"/materials/ss24-box.ai\",\n        notes: \"Premium packaging design for SS24 collection\",\n        createdAt: \"2024-01-15T10:00:00Z\",\n        updatedAt: \"2024-01-15T10:00:00Z\"\n    },\n    {\n        id: \"2\",\n        title: \"Holiday Campaign Visuals\",\n        type: \"visual\",\n        status: \"active\",\n        campaign: \"Holiday23\",\n        tags: [\n            \"campaign\",\n            \"social\"\n        ],\n        previewUrl: \"/materials/holiday-visuals.jpg\",\n        fileUrl: \"/materials/holiday-visuals.psd\",\n        notes: \"Social media visuals for holiday campaign\",\n        createdAt: \"2023-11-01T09:00:00Z\",\n        updatedAt: \"2023-11-01T09:00:00Z\"\n    },\n    {\n        id: \"3\",\n        title: \"FW24 Lookbook\",\n        type: \"print\",\n        status: \"draft\",\n        campaign: \"FW24\",\n        tags: [\n            \"lookbook\",\n            \"print\"\n        ],\n        previewUrl: \"/materials/fw24-lookbook.jpg\",\n        fileUrl: \"/materials/fw24-lookbook.indd\",\n        notes: \"Fall/Winter 2024 collection lookbook\",\n        createdAt: \"2024-02-01T14:00:00Z\",\n        updatedAt: \"2024-02-01T14:00:00Z\"\n    }\n];\nfunction updateFilteredMaterials(state) {\n    let filtered = state.materials;\n    // Apply search filter\n    if (state.searchTerm) {\n        const searchLower = state.searchTerm.toLowerCase();\n        filtered = filtered.filter((m)=>{\n            var _m_notes;\n            return m.title.toLowerCase().includes(searchLower) || ((_m_notes = m.notes) === null || _m_notes === void 0 ? void 0 : _m_notes.toLowerCase().includes(searchLower));\n        });\n    }\n    // Apply type filter\n    if (state.typeFilter !== \"all\") {\n        filtered = filtered.filter((m)=>m.type === state.typeFilter);\n    }\n    // Apply campaign filter\n    if (state.campaignFilter !== \"all\") {\n        filtered = filtered.filter((m)=>m.campaign === state.campaignFilter);\n    }\n    // Apply tag filter\n    if (state.tagFilter.length > 0) {\n        filtered = filtered.filter((m)=>state.tagFilter.every((tag)=>m.tags.includes(tag)));\n    }\n    useMaterialStore.setState({\n        filteredMaterials: filtered\n    });\n}\nconst useMaterialStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set, get)=>({\n        materials: initialMaterials,\n        filteredMaterials: initialMaterials,\n        searchTerm: \"\",\n        typeFilter: \"all\",\n        campaignFilter: \"all\",\n        tagFilter: [],\n        setSearchTerm: (term)=>{\n            set({\n                searchTerm: term\n            });\n            updateFilteredMaterials(get());\n        },\n        setTypeFilter: (type)=>{\n            set({\n                typeFilter: type\n            });\n            updateFilteredMaterials(get());\n        },\n        setCampaignFilter: (campaign)=>{\n            set({\n                campaignFilter: campaign\n            });\n            updateFilteredMaterials(get());\n        },\n        setTagFilter: (tags)=>{\n            set({\n                tagFilter: tags\n            });\n            updateFilteredMaterials(get());\n        },\n        bulkArchive: async (ids)=>{\n            const { materials } = get();\n            const updatedMaterials = materials.map((m)=>ids.includes(m.id) ? {\n                    ...m,\n                    status: \"archived\"\n                } : m);\n            set({\n                materials: updatedMaterials\n            });\n            updateFilteredMaterials(get());\n        },\n        bulkAssignCampaign: async (ids, campaign)=>{\n            const { materials } = get();\n            const updatedMaterials = materials.map((m)=>ids.includes(m.id) ? {\n                    ...m,\n                    campaign\n                } : m);\n            set({\n                materials: updatedMaterials\n            });\n            updateFilteredMaterials(get());\n        },\n        bulkAddTags: async (ids, tags)=>{\n            const { materials } = get();\n            const updatedMaterials = materials.map((m)=>ids.includes(m.id) ? {\n                    ...m,\n                    tags: [\n                        ...new Set([\n                            ...m.tags,\n                            ...tags\n                        ])\n                    ]\n                } : m);\n            set({\n                materials: updatedMaterials\n            });\n            updateFilteredMaterials(get());\n        },\n        bulkDelete: async (ids)=>{\n            const { materials } = get();\n            const updatedMaterials = materials.filter((m)=>!ids.includes(m.id));\n            set({\n                materials: updatedMaterials\n            });\n            updateFilteredMaterials(get());\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/materials/material-store.ts\n"));

/***/ })

});