"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/production/materials/page",{

/***/ "(app-pages-browser)/./lib/materials/material-store.ts":
/*!*****************************************!*\
  !*** ./lib/materials/material-store.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMaterialStore: () => (/* binding */ useMaterialStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n\n// Mock data until we have a backend\nconst mockMaterials = [\n    {\n        id: \"1\",\n        name: \"Organic Flour\",\n        type: \"raw\",\n        status: \"active\",\n        description: \"High-quality organic wheat flour\",\n        price: 2.5,\n        quantity: 1000,\n        unit: \"kg\",\n        supplier: \"Flour Mill Co.\",\n        contactPerson: \"John Smith\",\n        email: \"john@flourmill.com\",\n        phone: \"+1234567890\",\n        website: \"www.flourmill.com\",\n        notes: [\n            \"Premium quality\",\n            \"Certified organic\"\n        ],\n        certifications: [\n            \"Organic\",\n            \"Non-GMO\"\n        ],\n        isArchived: false,\n        createdAt: \"2024-01-01T00:00:00Z\",\n        updatedAt: \"2024-01-01T00:00:00Z\"\n    }\n];\nconst applyFilters = (materials, filters)=>{\n    return materials.filter((material)=>{\n        // Search filter\n        if (filters.search) {\n            var _material_contactPerson, _material_email;\n            const searchLower = filters.search.toLowerCase();\n            const matchesSearch = material.name.toLowerCase().includes(searchLower) || ((_material_contactPerson = material.contactPerson) === null || _material_contactPerson === void 0 ? void 0 : _material_contactPerson.toLowerCase().includes(searchLower)) || ((_material_email = material.email) === null || _material_email === void 0 ? void 0 : _material_email.toLowerCase().includes(searchLower));\n            if (!matchesSearch) return false;\n        }\n        // Category filter\n        if (filters.category && material.type !== filters.category) {\n            return false;\n        }\n        // Contact status filter\n        if (filters.contactStatus && material.status !== filters.contactStatus) {\n            return false;\n        }\n        // Certification filter\n        if (filters.certifications.length > 0) {\n            const hasCertification = material.certifications.some((cert)=>filters.certifications.includes(cert));\n            if (!hasCertification) return false;\n        }\n        // Show archived filter\n        if (!filters.showArchived && material.isArchived) {\n            return false;\n        }\n        return true;\n    });\n};\nconst useMaterialStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set, get)=>({\n        materials: mockMaterials,\n        filteredMaterials: mockMaterials,\n        selectedRows: [],\n        isModalOpen: false,\n        selectedMaterialId: null,\n        filters: {\n            search: '',\n            category: null,\n            contactStatus: null,\n            certifications: [],\n            showArchived: false\n        },\n        searchQuery: \"\",\n        setSearchFilter: (query)=>set((state)=>{\n                const newFilters = {\n                    ...state.filters,\n                    search: query\n                };\n                return {\n                    filters: newFilters,\n                    filteredMaterials: applyFilters(state.materials, newFilters)\n                };\n            }),\n        setCategoryFilter: (category)=>set((state)=>{\n                const newFilters = {\n                    ...state.filters,\n                    category\n                };\n                return {\n                    filters: newFilters,\n                    filteredMaterials: applyFilters(state.materials, newFilters)\n                };\n            }),\n        setContactStatusFilter: (status)=>set((state)=>{\n                const newFilters = {\n                    ...state.filters,\n                    contactStatus: status\n                };\n                return {\n                    filters: newFilters,\n                    filteredMaterials: applyFilters(state.materials, newFilters)\n                };\n            }),\n        setCertificationFilter: (certifications)=>set((state)=>{\n                const newFilters = {\n                    ...state.filters,\n                    certifications\n                };\n                return {\n                    filters: newFilters,\n                    filteredMaterials: applyFilters(state.materials, newFilters)\n                };\n            }),\n        toggleShowArchived: ()=>set((state)=>{\n                const newFilters = {\n                    ...state.filters,\n                    showArchived: !state.filters.showArchived\n                };\n                return {\n                    filters: newFilters,\n                    filteredMaterials: applyFilters(state.materials, newFilters)\n                };\n            }),\n        clearFilters: ()=>set((state)=>{\n                const newFilters = {\n                    search: '',\n                    category: null,\n                    contactStatus: null,\n                    certifications: [],\n                    showArchived: false\n                };\n                return {\n                    filters: newFilters,\n                    filteredMaterials: applyFilters(state.materials, newFilters)\n                };\n            }),\n        openModal: ()=>set({\n                isModalOpen: true\n            }),\n        closeModal: ()=>set({\n                isModalOpen: false\n            }),\n        selectMaterial: (id)=>set({\n                selectedMaterialId: id\n            }),\n        addMaterial: (data)=>set((state)=>{\n                const newMaterial = {\n                    ...data,\n                    id: Math.random().toString(36).substr(2, 9),\n                    createdAt: new Date().toISOString(),\n                    updatedAt: new Date().toISOString()\n                };\n                const materials = [\n                    ...state.materials,\n                    newMaterial\n                ];\n                return {\n                    materials,\n                    filteredMaterials: applyFilters(materials, state.filters)\n                };\n            }),\n        updateMaterial: (id, data)=>set((state)=>{\n                const materials = state.materials.map((m)=>m.id === id ? {\n                        ...m,\n                        ...data,\n                        updatedAt: new Date().toISOString()\n                    } : m);\n                return {\n                    materials,\n                    filteredMaterials: applyFilters(materials, state.filters)\n                };\n            }),\n        archiveMaterial: (id)=>set((state)=>{\n                const materials = state.materials.map((m)=>m.id === id ? {\n                        ...m,\n                        isArchived: true,\n                        updatedAt: new Date().toISOString()\n                    } : m);\n                return {\n                    materials,\n                    filteredMaterials: applyFilters(materials, state.filters)\n                };\n            }),\n        restoreMaterial: (id)=>set((state)=>{\n                const materials = state.materials.map((m)=>m.id === id ? {\n                        ...m,\n                        isArchived: false,\n                        updatedAt: new Date().toISOString()\n                    } : m);\n                return {\n                    materials,\n                    filteredMaterials: applyFilters(materials, state.filters)\n                };\n            }),\n        bulkArchive: ()=>set((state)=>{\n                const materials = state.materials.map((m)=>state.selectedRows.includes(m.id) ? {\n                        ...m,\n                        isArchived: true,\n                        updatedAt: new Date().toISOString()\n                    } : m);\n                return {\n                    materials,\n                    filteredMaterials: applyFilters(materials, state.filters),\n                    selectedRows: []\n                };\n            }),\n        bulkRestore: ()=>set((state)=>{\n                const materials = state.materials.map((m)=>state.selectedRows.includes(m.id) ? {\n                        ...m,\n                        isArchived: false,\n                        updatedAt: new Date().toISOString()\n                    } : m);\n                return {\n                    materials,\n                    filteredMaterials: applyFilters(materials, state.filters),\n                    selectedRows: []\n                };\n            }),\n        bulkAddCertification: (certification)=>set((state)=>{\n                const materials = state.materials.map((m)=>state.selectedRows.includes(m.id) ? {\n                        ...m,\n                        certifications: m.certifications.includes(certification) ? m.certifications : [\n                            ...m.certifications,\n                            certification\n                        ],\n                        updatedAt: new Date().toISOString()\n                    } : m);\n                return {\n                    materials,\n                    filteredMaterials: applyFilters(materials, state.filters),\n                    selectedRows: []\n                };\n            }),\n        setSearchQuery: (query)=>{\n            set({\n                searchQuery: query\n            });\n            const { materials, filters } = get();\n            set({\n                filteredMaterials: applyFilters(materials, query, filters)\n            });\n        },\n        setFilters: (newFilters)=>{\n            set({\n                filters: newFilters\n            });\n            const { materials, searchQuery } = get();\n            set({\n                filteredMaterials: applyFilters(materials, searchQuery, newFilters)\n            });\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9tYXRlcmlhbHMvbWF0ZXJpYWwtc3RvcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0M7QUFHaEMsb0NBQW9DO0FBQ3BDLE1BQU1DLGdCQUE0QjtJQUNoQztRQUNFQyxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsTUFBTTtRQUNOQyxRQUFRO1FBQ1JDLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxVQUFVO1FBQ1ZDLE1BQU07UUFDTkMsVUFBVTtRQUNWQyxlQUFlO1FBQ2ZDLE9BQU87UUFDUEMsT0FBTztRQUNQQyxTQUFTO1FBQ1RDLE9BQU87WUFBQztZQUFtQjtTQUFvQjtRQUMvQ0MsZ0JBQWdCO1lBQUM7WUFBVztTQUFVO1FBQ3RDQyxZQUFZO1FBQ1pDLFdBQVc7UUFDWEMsV0FBVztJQUNiO0NBQ0Q7QUFzQ0QsTUFBTUMsZUFBZSxDQUFDQyxXQUF1QkM7SUFDM0MsT0FBT0QsVUFBVUUsTUFBTSxDQUFDLENBQUNDO1FBQ3ZCLGdCQUFnQjtRQUNoQixJQUFJRixRQUFRRyxNQUFNLEVBQUU7Z0JBSWhCRCx5QkFDQUE7WUFKRixNQUFNRSxjQUFjSixRQUFRRyxNQUFNLENBQUNFLFdBQVc7WUFDOUMsTUFBTUMsZ0JBQ0pKLFNBQVNyQixJQUFJLENBQUN3QixXQUFXLEdBQUdFLFFBQVEsQ0FBQ0gsa0JBQ3JDRiwwQkFBQUEsU0FBU2IsYUFBYSxjQUF0QmEsOENBQUFBLHdCQUF3QkcsV0FBVyxHQUFHRSxRQUFRLENBQUNILG1CQUMvQ0Ysa0JBQUFBLFNBQVNaLEtBQUssY0FBZFksc0NBQUFBLGdCQUFnQkcsV0FBVyxHQUFHRSxRQUFRLENBQUNIO1lBQ3pDLElBQUksQ0FBQ0UsZUFBZSxPQUFPO1FBQzdCO1FBRUEsa0JBQWtCO1FBQ2xCLElBQUlOLFFBQVFRLFFBQVEsSUFBSU4sU0FBU3BCLElBQUksS0FBS2tCLFFBQVFRLFFBQVEsRUFBRTtZQUMxRCxPQUFPO1FBQ1Q7UUFFQSx3QkFBd0I7UUFDeEIsSUFBSVIsUUFBUVMsYUFBYSxJ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SUFBSSxDQUFDUztnQkFDSCxNQUFNMUIsWUFBWTBCLE1BQU0xQixTQUFTLENBQUM4QyxHQUFHLENBQUMsQ0FBQ0MsSUFDckNyQixNQUFNTixZQUFZLENBQUNaLFFBQVEsQ0FBQ3VDLEVBQUVsRSxFQUFFLElBQzVCO3dCQUNFLEdBQUdrRSxDQUFDO3dCQUNKcEQsZ0JBQWdCb0QsRUFBRXBELGNBQWMsQ0FBQ2EsUUFBUSxDQUFDNkMsaUJBQ3RDTixFQUFFcEQsY0FBYyxHQUNoQjsrQkFBSW9ELEVBQUVwRCxjQUFjOzRCQUFFMEQ7eUJBQWM7d0JBQ3hDdkQsV0FBVyxJQUFJNkMsT0FBT0MsV0FBVztvQkFDbkMsSUFDQUc7Z0JBRU4sT0FBTztvQkFDTC9DO29CQUNBbUIsbUJBQW1CcEIsYUFBYUMsV0FBVzBCLE1BQU16QixPQUFPO29CQUN4RG1CLGNBQWMsRUFBRTtnQkFDbEI7WUFDRjtRQUVGa0MsZ0JBQWdCLENBQUM3QjtZQUNmUixJQUFJO2dCQUFFTSxhQUFhRTtZQUFNO1lBQ3pCLE1BQU0sRUFBRXpCLFNBQVMsRUFBRUMsT0FBTyxFQUFFLEdBQUdpQjtZQUMvQkQsSUFBSTtnQkFBRUUsbUJBQW1CcEIsYUFBYUMsV0FBV3lCLE9BQU94QjtZQUFTO1FBQ25FO1FBRUFzRCxZQUFZLENBQUM1QjtZQUNYVixJQUFJO2dCQUFFaEIsU0FBUzBCO1lBQVc7WUFDMUIsTUFBTSxFQUFFM0IsU0FBUyxFQUFFdUIsV0FBVyxFQUFFLEdBQUdMO1lBQ25DRCxJQUFJO2dCQUFFRSxtQkFBbUJwQixhQUFhQyxXQUFXdUIsYUFBYUk7WUFBWTtRQUM1RTtJQUNGLElBQUciLCJzb3VyY2VzIjpbIi9Vc2Vycy9pLmlkcmlzc2kvRG93bmxvYWRzL2ZpbmFuY2lhbC1kYXNoYm9hcmQgKDMpL2xpYi9tYXRlcmlhbHMvbWF0ZXJpYWwtc3RvcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSBcInp1c3RhbmRcIlxuaW1wb3J0IHR5cGUgeyBNYXRlcmlhbCwgTWF0ZXJpYWxUeXBlLCBNYXRlcmlhbFN0YXR1cywgTWF0ZXJpYWxDYW1wYWlnbiwgTWF0ZXJpYWxUYWcgfSBmcm9tIFwiQC90eXBlcy9tYXRlcmlhbHNcIlxuXG4vLyBNb2NrIGRhdGEgdW50aWwgd2UgaGF2ZSBhIGJhY2tlbmRcbmNvbnN0IG1vY2tNYXRlcmlhbHM6IE1hdGVyaWFsW10gPSBbXG4gIHtcbiAgICBpZDogXCIxXCIsXG4gICAgbmFtZTogXCJPcmdhbmljIEZsb3VyXCIsXG4gICAgdHlwZTogXCJyYXdcIixcbiAgICBzdGF0dXM6IFwiYWN0aXZlXCIsXG4gICAgZGVzY3JpcHRpb246IFwiSGlnaC1xdWFsaXR5IG9yZ2FuaWMgd2hlYXQgZmxvdXJcIixcbiAgICBwcmljZTogMi41LFxuICAgIHF1YW50aXR5OiAxMDAwLFxuICAgIHVuaXQ6IFwia2dcIixcbiAgICBzdXBwbGllcjogXCJGbG91ciBNaWxsIENvLlwiLFxuICAgIGNvbnRhY3RQZXJzb246IFwiSm9obiBTbWl0aFwiLFxuICAgIGVtYWlsOiBcImpvaG5AZmxvdXJtaWxsLmNvbVwiLFxuICAgIHBob25lOiBcIisxMjM0NTY3ODkwXCIsXG4gICAgd2Vic2l0ZTogXCJ3d3cuZmxvdXJtaWxsLmNvbVwiLFxuICAgIG5vdGVzOiBbXCJQcmVtaXVtIHF1YWxpdHlcIiwgXCJDZXJ0aWZpZWQgb3JnYW5pY1wiXSxcbiAgICBjZXJ0aWZpY2F0aW9uczogW1wiT3JnYW5pY1wiLCBcIk5vbi1HTU9cIl0sXG4gICAgaXNBcmNoaXZlZDogZmFsc2UsXG4gICAgY3JlYXRlZEF0OiBcIjIwMjQtMDEtMDFUMDA6MDA6MDBaXCIsXG4gICAgdXBkYXRlZEF0OiBcIjIwMjQtMDEtMDFUMDA6MDA6MDBaXCJcbiAgfVxuXVxuXG5pbnRlcmZhY2UgTWF0ZXJpYWxGaWx0ZXJzIHtcbiAgc2VhcmNoOiBzdHJpbmdcbiAgY2F0ZWdvcnk6IE1hdGVyaWFsVHlwZSB8IG51bGxcbiAgY29udGFjdFN0YXR1czogTWF0ZXJpYWxTdGF0dXMgfCBudWxsXG4gIGNlcnRpZmljYXRpb25zOiBzdHJpbmdbXVxuICBzaG93QXJjaGl2ZWQ6IGJvb2xlYW5cbn1cblxuaW50ZXJmYWNlIE1hdGVyaWFsU3RvcmUge1xuICBtYXRlcmlhbHM6IE1hdGVyaWFsW11cbiAgZmlsdGVyZWRNYXRlcmlhbHM6IE1hdGVyaWFsW11cbiAgc2VsZWN0ZWRSb3dzOiBzdHJpbmdbXVxuICBpc01vZGFsT3BlbjogYm9vbGVhblxuICBzZWxlY3RlZE1hdGVyaWFsSWQ6IHN0cmluZyB8IG51bGxcbiAgZmlsdGVyczogTWF0ZXJpYWxGaWx0ZXJzXG4gIHNlYXJjaFF1ZXJ5OiBzdHJpbmdcbiAgc2V0U2VhcmNoRmlsdGVyOiAocXVlcnk6IHN0cmluZykgPT4gdm9pZFxuICBzZXRDYXRlZ29yeUZpbHRlcjogKGNhdGVnb3J5OiBNYXRlcmlhbFR5cGUgfCBudWxsKSA9PiB2b2lkXG4gIHNldENvbnRhY3RTdGF0dXNGaWx0ZXI6IChzdGF0dXM6IE1hdGVyaWFsU3RhdHVzIHwgbnVsbCkgPT4gdm9pZFxuICBzZXRDZXJ0aWZpY2F0aW9uRmlsdGVyOiAoY2VydGlmaWNhdGlvbnM6IHN0cmluZ1tdKSA9PiB2b2lkXG4gIHRvZ2dsZVNob3dBcmNoaXZlZDogKCkgPT4gdm9pZFxuICBjbGVhckZpbHRlcnM6ICgpID0+IHZvaWRcbiAgb3Blbk1vZGFsOiAoKSA9PiB2b2lkXG4gIGNsb3NlTW9kYWw6ICgpID0+IHZvaWRcbiAgc2VsZWN0TWF0ZXJpYWw6IChpZDogc3RyaW5nKSA9PiB2b2lkXG4gIGFkZE1hdGVyaWFsOiAoZGF0YTogT21pdDxNYXRlcmlhbCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCc+KSA9PiB2b2lkXG4gIHVwZGF0ZU1hdGVyaWFsOiAoaWQ6IHN0cmluZywgZGF0YTogUGFydGlhbDxNYXRlcmlhbD4pID0+IHZvaWRcbiAgYXJjaGl2ZU1hdGVyaWFsOiAoaWQ6IHN0cmluZykgPT4gdm9pZFxuICByZXN0b3JlTWF0ZXJpYWw6IChpZDogc3RyaW5nKSA9PiB2b2lkXG4gIGJ1bGtBcmNoaXZlOiAoKSA9PiB2b2lkXG4gIGJ1bGtSZXN0b3JlOiAoKSA9PiB2b2lkXG4gIGJ1bGtBZGRDZXJ0aWZpY2F0aW9uOiAoY2VydGlmaWNhdGlvbjogc3RyaW5nKSA9PiB2b2lkXG4gIHNldFNlYXJjaFF1ZXJ5OiAocXVlcnk6IHN0cmluZykgPT4gdm9pZFxuICBzZXRGaWx0ZXJzOiAoZmlsdGVyczogTWF0ZXJpYWxGaWx0ZXJzKSA9PiB2b2lkXG59XG5cbmNvbnN0IGFwcGx5RmlsdGVycyA9IChtYXRlcmlhbHM6IE1hdGVyaWFsW10sIGZpbHRlcnM6IE1hdGVyaWFsRmlsdGVycyk6IE1hdGVyaWFsW10gPT4ge1xuICByZXR1cm4gbWF0ZXJpYWxzLmZpbHRlcigobWF0ZXJpYWwpID0+IHtcbiAgICAvLyBTZWFyY2ggZmlsdGVyXG4gICAgaWYgKGZpbHRlcnMuc2VhcmNoKSB7XG4gICAgICBjb25zdCBzZWFyY2hMb3dlciA9IGZpbHRlcnMuc2VhcmNoLnRvTG93ZXJDYXNlKClcbiAgICAgIGNvbnN0IG1hdGNoZXNTZWFyY2ggPVxuICAgICAgICBtYXRlcmlhbC5uYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoTG93ZXIpIHx8XG4gICAgICAgIG1hdGVyaWFsLmNvbnRhY3RQZXJzb24/LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoTG93ZXIpIHx8XG4gICAgICAgIG1hdGVyaWFsLmVtYWlsPy50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaExvd2VyKVxuICAgICAgaWYgKCFtYXRjaGVzU2VhcmNoKSByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICAvLyBDYXRlZ29yeSBmaWx0ZXJcbiAgICBpZiAoZmlsdGVycy5jYXRlZ29yeSAmJiBtYXRlcmlhbC50eXBlICE9PSBmaWx0ZXJzLmNhdGVnb3J5KSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICAvLyBDb250YWN0IHN0YXR1cyBmaWx0ZXJcbiAgICBpZiAoZmlsdGVycy5jb250YWN0U3RhdHVzICYmIG1hdGVyaWFsLnN0YXR1cyAhPT0gZmlsdGVycy5jb250YWN0U3RhdHVzKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICAvLyBDZXJ0aWZpY2F0aW9uIGZpbHRlclxuICAgIGlmIChmaWx0ZXJzLmNlcnRpZmljYXRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IGhhc0NlcnRpZmljYXRpb24gPSBtYXRlcmlhbC5jZXJ0aWZpY2F0aW9ucy5zb21lKGNlcnQgPT5cbiAgICAgICAgZmlsdGVycy5jZXJ0aWZpY2F0aW9ucy5pbmNsdWRlcyhjZXJ0KVxuICAgICAgKVxuICAgICAgaWYgKCFoYXNDZXJ0aWZpY2F0aW9uKSByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICAvLyBTaG93IGFyY2hpdmVkIGZpbHRlclxuICAgIGlmICghZmlsdGVycy5zaG93QXJjaGl2ZWQgJiYgbWF0ZXJpYWwuaXNBcmNoaXZlZCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWVcbiAgfSlcbn1cblxuZXhwb3J0IGNvbnN0IHVzZU1hdGVyaWFsU3RvcmUgPSBjcmVhdGU8TWF0ZXJpYWxTdG9yZT4oKHNldCwgZ2V0KSA9PiAoe1xuICBtYXRlcmlhbHM6IG1vY2tNYXRlcmlhbHMsXG4gIGZpbHRlcmVkTWF0ZXJpYWxzOiBtb2NrTWF0ZXJpYWxzLFxuICBzZWxlY3RlZFJvd3M6IFtdLFxuICBpc01vZGFsT3BlbjogZmFsc2UsXG4gIHNlbGVjdGVkTWF0ZXJpYWxJZDogbnVsbCxcbiAgZmlsdGVyczoge1xuICAgIHNlYXJjaDogJycsXG4gICAgY2F0ZWdvcnk6IG51bGwsXG4gICAgY29udGFjdFN0YXR1czogbnVsbCxcbiAgICBjZXJ0aWZpY2F0aW9uczogW10sXG4gICAgc2hvd0FyY2hpdmVkOiBmYWxzZSxcbiAgfSxcbiAgc2VhcmNoUXVlcnk6IFwiXCIsXG5cbiAgc2V0U2VhcmNoRmlsdGVyOiAocXVlcnkpID0+XG4gICAgc2V0KChzdGF0ZSkgPT4ge1xuICAgICAgY29uc3QgbmV3RmlsdGVycyA9IHsgLi4uc3RhdGUuZmlsdGVycywgc2VhcmNoOiBxdWVyeSB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWx0ZXJzOiBuZXdGaWx0ZXJzLFxuICAgICAgICBmaWx0ZXJlZE1hdGVyaWFsczogYXBwbHlGaWx0ZXJzKHN0YXRlLm1hdGVyaWFscywgbmV3RmlsdGVycyksXG4gICAgICB9XG4gICAgfSksXG5cbiAgc2V0Q2F0ZWdvcnlGaWx0ZXI6IChjYXRlZ29yeSkgPT5cbiAgICBzZXQoKHN0YXRlKSA9PiB7XG4gICAgICBjb25zdCBuZXdGaWx0ZXJzID0geyAuLi5zdGF0ZS5maWx0ZXJzLCBjYXRlZ29yeSB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWx0ZXJzOiBuZXdGaWx0ZXJzLFxuICAgICAgICBmaWx0ZXJlZE1hdGVyaWFsczogYXBwbHlGaWx0ZXJzKHN0YXRlLm1hdGVyaWFscywgbmV3RmlsdGVycyksXG4gICAgICB9XG4gICAgfSksXG5cbiAgc2V0Q29udGFjdFN0YXR1c0ZpbHRlcjogKHN0YXR1cykgPT5cbiAgICBzZXQoKHN0YXRlKSA9PiB7XG4gICAgICBjb25zdCBuZXdGaWx0ZXJzID0geyAuLi5zdGF0ZS5maWx0ZXJzLCBjb250YWN0U3RhdHVzOiBzdGF0dXMgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsdGVyczogbmV3RmlsdGVycyxcbiAgICAgICAgZmlsdGVyZWRNYXRlcmlhbHM6IGFwcGx5RmlsdGVycyhzdGF0ZS5tYXRlcmlhbHMsIG5ld0ZpbHRlcnMpLFxuICAgICAgfVxuICAgIH0pLFxuXG4gIHNldENlcnRpZmljYXRpb25GaWx0ZXI6IChjZXJ0aWZpY2F0aW9ucykgPT5cbiAgICBzZXQoKHN0YXRlKSA9PiB7XG4gICAgICBjb25zdCBuZXdGaWx0ZXJzID0geyAuLi5zdGF0ZS5maWx0ZXJzLCBjZXJ0aWZpY2F0aW9ucyB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWx0ZXJzOiBuZXdGaWx0ZXJzLFxuICAgICAgICBmaWx0ZXJlZE1hdGVyaWFsczogYXBwbHlGaWx0ZXJzKHN0YXRlLm1hdGVyaWFscywgbmV3RmlsdGVycyksXG4gICAgICB9XG4gICAgfSksXG5cbiAgdG9nZ2xlU2hvd0FyY2hpdmVkOiAoKSA9PlxuICAgIHNldCgoc3RhdGUpID0+IHtcbiAgICAgIGNvbnN0IG5ld0ZpbHRlcnMgPSB7IC4uLnN0YXRlLmZpbHRlcnMsIHNob3dBcmNoaXZlZDogIXN0YXRlLmZpbHRlcnMuc2hvd0FyY2hpdmVkIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGZpbHRlcnM6IG5ld0ZpbHRlcnMsXG4gICAgICAgIGZpbHRlcmVkTWF0ZXJpYWxzOiBhcHBseUZpbHRlcnMoc3RhdGUubWF0ZXJpYWxzLCBuZXdGaWx0ZXJzKSxcbiAgICAgIH1cbiAgICB9KSxcblxuICBjbGVhckZpbHRlcnM6ICgpID0+XG4gICAgc2V0KChzdGF0ZSkgPT4ge1xuICAgICAgY29uc3QgbmV3RmlsdGVycyA9IHtcbiAgICAgICAgc2VhcmNoOiAnJyxcbiAgICAgICAgY2F0ZWdvcnk6IG51bGwsXG4gICAgICAgIGNvbnRhY3RTdGF0dXM6IG51bGwsXG4gICAgICAgIGNlcnRpZmljYXRpb25zOiBbXSxcbiAgICAgICAgc2hvd0FyY2hpdmVkOiBmYWxzZSxcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGZpbHRlcnM6IG5ld0ZpbHRlcnMsXG4gICAgICAgIGZpbHRlcmVkTWF0ZXJpYWxzOiBhcHBseUZpbHRlcnMoc3RhdGUubWF0ZXJpYWxzLCBuZXdGaWx0ZXJzKSxcbiAgICAgIH1cbiAgICB9KSxcblxuICBvcGVuTW9kYWw6ICgpID0+IHNldCh7IGlzTW9kYWxPcGVuOiB0cnVlIH0pLFxuICBjbG9zZU1vZGFsOiAoKSA9PiBzZXQoeyBpc01vZGFsT3BlbjogZmFsc2UgfSksXG4gIHNlbGVjdE1hdGVyaWFsOiAoaWQpID0+IHNldCh7IHNlbGVjdGVkTWF0ZXJpYWxJZDogaWQgfSksXG5cbiAgYWRkTWF0ZXJpYWw6IChkYXRhKSA9PlxuICAgIHNldCgoc3RhdGUpID0+IHtcbiAgICAgIGNvbnN0IG5ld01hdGVyaWFsOiBNYXRlcmlhbCA9IHtcbiAgICAgICAgLi4uZGF0YSxcbiAgICAgICAgaWQ6IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KSxcbiAgICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgfVxuICAgICAgY29uc3QgbWF0ZXJpYWxzID0gWy4uLnN0YXRlLm1hdGVyaWFscywgbmV3TWF0ZXJpYWxdXG4gICAgICByZXR1cm4ge1xuICAgICAgICBtYXRlcmlhbHMsXG4gICAgICAgIGZpbHRlcmVkTWF0ZXJpYWxzOiBhcHBseUZpbHRlcnMobWF0ZXJpYWxzLCBzdGF0ZS5maWx0ZXJzKSxcbiAgICAgIH1cbiAgICB9KSxcblxuICB1cGRhdGVNYXRlcmlhbDogKGlkLCBkYXRhKSA9PlxuICAgIHNldCgoc3RhdGUpID0+IHtcbiAgICAgIGNvbnN0IG1hdGVyaWFscyA9IHN0YXRlLm1hdGVyaWFscy5tYXAoKG0pID0+XG4gICAgICAgIG0uaWQgPT09IGlkID8geyAuLi5tLCAuLi5kYXRhLCB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSB9IDogbVxuICAgICAgKVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWF0ZXJpYWxzLFxuICAgICAgICBmaWx0ZXJlZE1hdGVyaWFsczogYXBwbHlGaWx0ZXJzKG1hdGVyaWFscywgc3RhdGUuZmlsdGVycyksXG4gICAgICB9XG4gICAgfSksXG5cbiAgYXJjaGl2ZU1hdGVyaWFsOiAoaWQpID0+XG4gICAgc2V0KChzdGF0ZSkgPT4ge1xuICAgICAgY29uc3QgbWF0ZXJpYWxzID0gc3RhdGUubWF0ZXJpYWxzLm1hcCgobSkgPT5cbiAgICAgICAgbS5pZCA9PT0gaWQgPyB7IC4uLm0sIGlzQXJjaGl2ZWQ6IHRydWUsIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpIH0gOiBtXG4gICAgICApXG4gICAgICByZXR1cm4ge1xuICAgICAgICBtYXRlcmlhbHMsXG4gICAgICAgIGZpbHRlcmVkTWF0ZXJpYWxzOiBhcHBseUZpbHRlcnMobWF0ZXJpYWxzLCBzdGF0ZS5maWx0ZXJzKSxcbiAgICAgIH1cbiAgICB9KSxcblxuICByZXN0b3JlTWF0ZXJpYWw6IChpZCkgPT5cbiAgICBzZXQoKHN0YXRlKSA9PiB7XG4gICAgICBjb25zdCBtYXRlcmlhbHMgPSBzdGF0ZS5tYXRlcmlhbHMubWFwKChtKSA9PlxuICAgICAgICBtLmlkID09PSBpZCA/IHsgLi4ubSwgaXNBcmNoaXZlZDogZmFsc2UsIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpIH0gOiBtXG4gICAgICApXG4gICAgICByZXR1cm4ge1xuICAgICAgICBtYXRlcmlhbHMsXG4gICAgICAgIGZpbHRlcmVkTWF0ZXJpYWxzOiBhcHBseUZpbHRlcnMobWF0ZXJpYWxzLCBzdGF0ZS5maWx0ZXJzKSxcbiAgICAgIH1cbiAgICB9KSxcblxuICBidWxrQXJjaGl2ZTogKCkgPT5cbiAgICBzZXQoKHN0YXRlKSA9PiB7XG4gICAgICBjb25zdCBtYXRlcmlhbHMgPSBzdGF0ZS5tYXRlcmlhbHMubWFwKChtKSA9PlxuICAgICAgICBzdGF0ZS5zZWxlY3RlZFJvd3MuaW5jbHVkZXMobS5pZClcbiAgICAgICAgICA/IHsgLi4ubSwgaXNBcmNoaXZlZDogdHJ1ZSwgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkgfVxuICAgICAgICAgIDogbVxuICAgICAgKVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWF0ZXJpYWxzLFxuICAgICAgICBmaWx0ZXJlZE1hdGVyaWFsczogYXBwbHlGaWx0ZXJzKG1hdGVyaWFscywgc3RhdGUuZmlsdGVycyksXG4gICAgICAgIHNlbGVjdGVkUm93czogW10sXG4gICAgICB9XG4gICAgfSksXG5cbiAgYnVsa1Jlc3RvcmU6ICgpID0+XG4gICAgc2V0KChzdGF0ZSkgPT4ge1xuICAgICAgY29uc3QgbWF0ZXJpYWxzID0gc3RhdGUubWF0ZXJpYWxzLm1hcCgobSkgPT5cbiAgICAgICAgc3RhdGUuc2VsZWN0ZWRSb3dzLmluY2x1ZGVzKG0uaWQpXG4gICAgICAgICAgPyB7IC4uLm0sIGlzQXJjaGl2ZWQ6IGZhbHNlLCB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSB9XG4gICAgICAgICAgOiBtXG4gICAgICApXG4gICAgICByZXR1cm4ge1xuICAgICAgICBtYXRlcmlhbHMsXG4gICAgICAgIGZpbHRlcmVkTWF0ZXJpYWxzOiBhcHBseUZpbHRlcnMobWF0ZXJpYWxzLCBzdGF0ZS5maWx0ZXJzKSxcbiAgICAgICAgc2VsZWN0ZWRSb3dzOiBbXSxcbiAgICAgIH1cbiAgICB9KSxcblxuICBidWxrQWRkQ2VydGlmaWNhdGlvbjogKGNlcnRpZmljYXRpb24pID0+XG4gICAgc2V0KChzdGF0ZSkgPT4ge1xuICAgICAgY29uc3QgbWF0ZXJpYWxzID0gc3RhdGUubWF0ZXJpYWxzLm1hcCgobSkgPT5cbiAgICAgICAgc3RhdGUuc2VsZWN0ZWRSb3dzLmluY2x1ZGVzKG0uaWQpXG4gICAgICAgICAgPyB7XG4gICAgICAgICAgICAgIC4uLm0sXG4gICAgICAgICAgICAgIGNlcnRpZmljYXRpb25zOiBtLmNlcnRpZmljYXRpb25zLmluY2x1ZGVzKGNlcnRpZmljYXRpb24pXG4gICAgICAgICAgICAgICAgPyBtLmNlcnRpZmljYXRpb25zXG4gICAgICAgICAgICAgICAgOiBbLi4ubS5jZXJ0aWZpY2F0aW9ucywgY2VydGlmaWNhdGlvbl0sXG4gICAgICAgICAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICAgICAgfVxuICAgICAgICAgIDogbVxuICAgICAgKVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWF0ZXJpYWxzLFxuICAgICAgICBmaWx0ZXJlZE1hdGVyaWFsczogYXBwbHlGaWx0ZXJzKG1hdGVyaWFscywgc3RhdGUuZmlsdGVycyksXG4gICAgICAgIHNlbGVjdGVkUm93czogW10sXG4gICAgICB9XG4gICAgfSksXG5cbiAgc2V0U2VhcmNoUXVlcnk6IChxdWVyeSkgPT4ge1xuICAgIHNldCh7IHNlYXJjaFF1ZXJ5OiBxdWVyeSB9KVxuICAgIGNvbnN0IHsgbWF0ZXJpYWxzLCBmaWx0ZXJzIH0gPSBnZXQoKVxuICAgIHNldCh7IGZpbHRlcmVkTWF0ZXJpYWxzOiBhcHBseUZpbHRlcnMobWF0ZXJpYWxzLCBxdWVyeSwgZmlsdGVycykgfSlcbiAgfSxcblxuICBzZXRGaWx0ZXJzOiAobmV3RmlsdGVycykgPT4ge1xuICAgIHNldCh7IGZpbHRlcnM6IG5ld0ZpbHRlcnMgfSlcbiAgICBjb25zdCB7IG1hdGVyaWFscywgc2VhcmNoUXVlcnkgfSA9IGdldCgpXG4gICAgc2V0KHsgZmlsdGVyZWRNYXRlcmlhbHM6IGFwcGx5RmlsdGVycyhtYXRlcmlhbHMsIHNlYXJjaFF1ZXJ5LCBuZXdGaWx0ZXJzKSB9KVxuICB9LFxufSkpICJdLCJuYW1lcyI6WyJjcmVhdGUiLCJtb2NrTWF0ZXJpYWxzIiwiaWQiLCJuYW1lIiwidHlwZSIsInN0YXR1cyIsImRlc2NyaXB0aW9uIiwicHJpY2UiLCJxdWFudGl0eSIsInVuaXQiLCJzdXBwbGllciIsImNvbnRhY3RQZXJzb24iLCJlbWFpbCIsInBob25lIiwid2Vic2l0ZSIsIm5vdGVzIiwiY2VydGlmaWNhdGlvbnMiLCJpc0FyY2hpdmVkIiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0IiwiYXBwbHlGaWx0ZXJzIiwibWF0ZXJpYWxzIiwiZmlsdGVycyIsImZpbHRlciIsIm1hdGVyaWFsIiwic2VhcmNoIiwic2VhcmNoTG93ZXIiLCJ0b0xvd2VyQ2FzZSIsIm1hdGNoZXNTZWFyY2giLCJpbmNsdWRlcyIsImNhdGVnb3J5IiwiY29udGFjdFN0YXR1cyIsImxlbmd0aCIsImhhc0NlcnRpZmljYXRpb24iLCJzb21lIiwiY2VydCIsInNob3dBcmNoaXZlZCIsInVzZU1hdGVyaWFsU3RvcmUiLCJzZXQiLCJnZXQiLCJmaWx0ZXJlZE1hdGVyaWFscyIsInNlbGVjdGVkUm93cyIsImlzTW9kYWxPcGVuIiwic2VsZWN0ZWRNYXRlcmlhbElkIiwic2VhcmNoUXVlcnkiLCJzZXRTZWFyY2hGaWx0ZXIiLCJxdWVyeSIsInN0YXRlIiwibmV3RmlsdGVycyIsInNldENhdGVnb3J5RmlsdGVyIiwic2V0Q29udGFjdFN0YXR1c0ZpbHRlciIsInNldENlcnRpZmljYXRpb25GaWx0ZXIiLCJ0b2dnbGVTaG93QXJjaGl2ZWQiLCJjbGVhckZpbHRlcnMiLCJvcGVuTW9kYWwiLCJjbG9zZU1vZGFsIiwic2VsZWN0TWF0ZXJpYWwiLCJhZGRNYXRlcmlhbCIsImRhdGEiLCJuZXdNYXRlcmlhbCIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0ciIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInVwZGF0ZU1hdGVyaWFsIiwibWFwIiwibSIsImFyY2hpdmVNYXRlcmlhbCIsInJlc3RvcmVNYXRlcmlhbCIsImJ1bGtBcmNoaXZlIiwiYnVsa1Jlc3RvcmUiLCJidWxrQWRkQ2VydGlmaWNhdGlvbiIsImNlcnRpZmljYXRpb24iLCJzZXRTZWFyY2hRdWVyeSIsInNldEZpbHRlcnMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/materials/material-store.ts\n"));

/***/ })

});