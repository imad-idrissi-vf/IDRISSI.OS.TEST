"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/production/materials/page",{

/***/ "(app-pages-browser)/./lib/materials/material-store.ts":
/*!*****************************************!*\
  !*** ./lib/materials/material-store.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMaterialStore: () => (/* binding */ useMaterialStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n\n// Mock data until we have a backend\nconst mockMaterials = [\n    {\n        id: \"1\",\n        name: \"Organic Flour\",\n        type: \"raw\",\n        status: \"active\",\n        description: \"High-quality organic wheat flour\",\n        price: 2.5,\n        quantity: 1000,\n        unit: \"kg\",\n        supplier: \"Flour Mill Co.\",\n        contactPerson: \"John Smith\",\n        email: \"john@flourmill.com\",\n        phone: \"+1234567890\",\n        website: \"www.flourmill.com\",\n        notes: [\n            \"Premium quality\",\n            \"Certified organic\"\n        ],\n        certifications: [\n            \"Organic\",\n            \"Non-GMO\"\n        ],\n        isArchived: false,\n        createdAt: \"2024-01-01T00:00:00Z\",\n        updatedAt: \"2024-01-01T00:00:00Z\"\n    }\n];\nfunction filterMaterials(materials, filters) {\n    return materials.filter((material)=>{\n        var _material_description, _filters_certifications;\n        // Search query filter\n        if (filters.searchQuery && !material.name.toLowerCase().includes(filters.searchQuery.toLowerCase()) && !((_material_description = material.description) === null || _material_description === void 0 ? void 0 : _material_description.toLowerCase().includes(filters.searchQuery.toLowerCase()))) {\n            return false;\n        }\n        // Category filter\n        if (filters.category && material.type !== filters.category) {\n            return false;\n        }\n        // Status filter\n        if (filters.contactStatus && material.status !== filters.contactStatus) {\n            return false;\n        }\n        // Certifications filter\n        if (((_filters_certifications = filters.certifications) === null || _filters_certifications === void 0 ? void 0 : _filters_certifications.length) && !filters.certifications.every((cert)=>{\n            var _material_certifications;\n            return (_material_certifications = material.certifications) === null || _material_certifications === void 0 ? void 0 : _material_certifications.includes(cert);\n        })) {\n            return false;\n        }\n        return true;\n    });\n}\nconst useMaterialStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set, get)=>({\n        materials: mockMaterials,\n        filteredMaterials: mockMaterials,\n        searchQuery: \"\",\n        filters: {\n            category: null,\n            contactStatus: null,\n            certifications: []\n        },\n        setSearchQuery: (query)=>{\n            set({\n                searchQuery: query\n            });\n            const { materials, filters } = get();\n            set({\n                filteredMaterials: filterMaterials(materials, {\n                    ...filters,\n                    searchQuery: query\n                })\n            });\n        },\n        setFilters: (newFilters)=>{\n            set((state)=>({\n                    filters: {\n                        ...state.filters,\n                        ...newFilters\n                    }\n                }));\n            const { materials, searchQuery, filters } = get();\n            set({\n                filteredMaterials: filterMaterials(materials, {\n                    ...filters,\n                    ...newFilters,\n                    searchQuery\n                })\n            });\n        },\n        addMaterial: (material)=>{\n            const newMaterial = {\n                ...material,\n                id: Math.random().toString(36).substring(7),\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString()\n            };\n            set((state)=>({\n                    materials: [\n                        ...state.materials,\n                        newMaterial\n                    ]\n                }));\n            const { searchQuery, filters } = get();\n            const { materials } = get();\n            set({\n                filteredMaterials: filterMaterials(materials, {\n                    ...filters,\n                    searchQuery\n                })\n            });\n        },\n        updateMaterial: (id, material)=>{\n            set((state)=>({\n                    materials: state.materials.map((m)=>m.id === id ? {\n                            ...m,\n                            ...material,\n                            updatedAt: new Date().toISOString()\n                        } : m)\n                }));\n            const { searchQuery, filters } = get();\n            const { materials } = get();\n            set({\n                filteredMaterials: filterMaterials(materials, {\n                    ...filters,\n                    searchQuery\n                })\n            });\n        },\n        archiveMaterial: (id)=>{\n            set((state)=>({\n                    materials: state.materials.map((m)=>m.id === id ? {\n                            ...m,\n                            status: \"archived\",\n                            updatedAt: new Date().toISOString()\n                        } : m)\n                }));\n            const { searchQuery, filters } = get();\n            const { materials } = get();\n            set({\n                filteredMaterials: filterMaterials(materials, {\n                    ...filters,\n                    searchQuery\n                })\n            });\n        },\n        restoreMaterial: (id)=>{\n            set((state)=>({\n                    materials: state.materials.map((m)=>m.id === id ? {\n                            ...m,\n                            status: \"active\",\n                            updatedAt: new Date().toISOString()\n                        } : m)\n                }));\n            const { searchQuery, filters } = get();\n            const { materials } = get();\n            set({\n                filteredMaterials: filterMaterials(materials, {\n                    ...filters,\n                    searchQuery\n                })\n            });\n        },\n        bulkArchive: (ids)=>{\n            set((state)=>({\n                    materials: state.materials.map((m)=>ids.includes(m.id) ? {\n                            ...m,\n                            status: \"archived\",\n                            updatedAt: new Date().toISOString()\n                        } : m)\n                }));\n            const { searchQuery, filters } = get();\n            const { materials } = get();\n            set({\n                filteredMaterials: filterMaterials(materials, {\n                    ...filters,\n                    searchQuery\n                })\n            });\n        },\n        bulkRestore: (ids)=>{\n            set((state)=>({\n                    materials: state.materials.map((m)=>ids.includes(m.id) ? {\n                            ...m,\n                            status: \"active\",\n                            updatedAt: new Date().toISOString()\n                        } : m)\n                }));\n            const { searchQuery, filters } = get();\n            const { materials } = get();\n            set({\n                filteredMaterials: filterMaterials(materials, {\n                    ...filters,\n                    searchQuery\n                })\n            });\n        },\n        bulkAddCertification: (ids, certification)=>{\n            set((state)=>({\n                    materials: state.materials.map((m)=>ids.includes(m.id) ? {\n                            ...m,\n                            certifications: [\n                                ...m.certifications || [],\n                                certification\n                            ],\n                            updatedAt: new Date().toISOString()\n                        } : m)\n                }));\n            const { searchQuery, filters } = get();\n            const { materials } = get();\n            set({\n                filteredMaterials: filterMaterials(materials, {\n                    ...filters,\n                    searchQuery\n                })\n            });\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/materials/material-store.ts\n"));

/***/ })

});